{"title":"iOS关于富文本字符串","date":"2019-03-29T01:37:22.000Z","slug":"iOS关于富文本字符串","updated":"2019-03-29T02:05:09.507Z","content":"<p>首先要创建一个带有属性的字符串NSMutableAttributedString</p>\n<pre><code>NSMutableAttributedString *attrString = [[NSMutableAttributedString alloc] initWithString:@&quot;这是一个富文本字符串&quot;]; \n/* 其他几种创建方法\n- (instancetype)initWithString:(NSString *)str;\n- (instancetype)initWithString:(NSString *)str attributes:(nullable NSDictionary&lt;NSString *, id&gt; *)attrs;\n- (instancetype)initWithAttributedString:(NSAttributedString *)attrStr;\n*/\n</code></pre><a id=\"more\"></a>\n<p>如何设置这个字符串的属性（以下两个方法：）</p>\n<pre><code>- (void)addAttribute:(NSString *)name value:(id)value range:(NSRange)range; // 每次设置一个属性和它对应的值\n- (void)addAttributes:(NSDictionary&lt;NSString *, id&gt; *)attrs range:(NSRange)range; // 一次可以设置多个属性 属性和属性值以字典键值对形式进行设置\n// range参数是设置要设置属性的字符串范围\n</code></pre><p>常用的属性都有哪些</p>\n<ul>\n<li>字体</li>\n</ul>\n<pre><code>[attrStr addAttribute:NSFontAttributeName value:[UIFont systemFontOfSize:30.0f] range:NSMakeRange(4, 3)];\n</code></pre><ul>\n<li>颜色</li>\n</ul>\n<pre><code>[attrStr addAttribute:NSForegroundColorAttributeName value:[UIColor redColor] range:NSMakeRange(4, 3)];\n</code></pre><ul>\n<li>背景颜色</li>\n</ul>\n<pre><code>[attrStr addAttribute:NSBackgroundColorAttributeName value:[UIColor redColor] range:NSMakeRange(4, 3)];\n</code></pre><ul>\n<li>空心字</li>\n</ul>\n<pre><code>[attrStr addAttribute:NSStrokeColorAttributeName\n    value:[UIColor redColor]\n    range:NSMakeRange(4, 3)];  // 设置描边颜色 要和NSStrokeWidthAttributeName设置描边宽度一起使用\n[attrStr addAttribute:NSStrokeWidthAttributeName\n    value:@1.5\n    range:NSMakeRange(4, 3)]; \n</code></pre><ul>\n<li><p>间距</p>\n<pre><code>[attrStr addAttribute:NSKernAttributeName\n                value:@10                    // NSNumber\n                range:NSMakeRange(4, 3)];\n</code></pre></li>\n</ul>\n<ul>\n<li>倾斜</li>\n</ul>\n<pre><code>[attrStr addAttribute:NSObliquenessAttributeName\n                value:@(0.5f)          // 正值向右倾斜 负值向左倾斜\n                range:NSMakeRange(4, 3)];\n</code></pre><ul>\n<li>拉伸、压缩</li>\n</ul>\n<pre><code>[attrStr addAttribute:NSExpansionAttributeName\n                value:@(0.5f)      // 正值横向拉伸 负值横向压缩\n                range:NSMakeRange(4, 3)];\n</code></pre><ul>\n<li>连体</li>\n</ul>\n<pre><code>NSMutableAttributedString * attrStr = [[NSMutableAttributedString alloc] initWithString:@&quot;&apos;flush&apos; is a string！&quot;];\n[attrStr addAttribute:NSLigatureAttributeName\n                value:@1\n                range:NSMakeRange(1, 5)];\n[attrStr addAttribute:NSFontAttributeName\n                value:[UIFont fontWithName:@&quot;futura&quot; size:30]\n                range:NSMakeRange(1, 5)];\n</code></pre><ul>\n<li>基线偏移量</li>\n</ul>\n<pre><code>[attrStr addAttribute:NSBaselineOffsetAttributeName\n                value:@(10)   // 正值上偏 负值下偏\n                range:NSMakeRange(4, 3)];\n</code></pre><ul>\n<li>阴影</li>\n</ul>\n<pre><code>NSShadow *shadow = [[NSShadow alloc] init];  // NSShadow只有3个属性：阴影颜色，模糊半径和偏移\nshadow.shadowOffset     = CGSizeMake(3, 3);   // 阴影偏移（X方向偏移和Y方向偏移）\nshadow.shadowBlurRadius = 1.5;                // 模糊半径\nshadow.shadowColor      = [UIColor redColor]; // 阴影颜色\n\n[attrStr addAttribute:NSShadowAttributeName\nvalue:shadow\nrange:NSMakeRange(4, 3)];\n</code></pre><ul>\n<li>特殊效果</li>\n</ul>\n<pre><code>[attrStr addAttribute:NSTextEffectAttributeName\nvalue:NSTextEffectLetterpressStyle  // NSString类型 目前只有NSTextEffectLetterpressStyle(凸版印刷效果)可用\nrange:NSMakeRange(4, 3)];\n</code></pre><ul>\n<li>书写方向</li>\n</ul>\n<pre><code>[attrStr addAttribute:NSWritingDirectionAttributeName\n                value:@[@(NSWritingDirectionRightToLeft | NSWritingDirectionOverride)]\n                range:NSMakeRange(0, attrStr.length)];\n\n\n//NSWritingDirectionAttributeName 设置文字书写方向，取值为以下组合\n// iOS9.0以前\n//@[@(NSWritingDirectionLeftToRight | NSTextWritingDirectionEmbedding)]\n//@[@(NSWritingDirectionLeftToRight | NSTextWritingDirectionOverride)]\n//@[@(NSWritingDirectionRightToLeft | NSTextWritingDirectionEmbedding)]\n//@[@(NSWritingDirectionRightToLeft | NSTextWritingDirectionOverride)]\n// iOS9.0以后\n//@[@(NSWritingDirectionLeftToRight | NSWritingDirectionEmbedding)]\n//@[@(NSWritingDirectionLeftToRight | NSWritingDirectionOverride)]\n//@[@(NSWritingDirectionRightToLeft | NSWritingDirectionEmbedding)]\n//@[@(NSWritingDirectionRightToLeft | NSWritingDirectionOverride)]\n// NSWritingDirectionOverride 和 NSWritingDirectionEmbedding 是指定Unicode双向定义的格式控制算法（具体的没太搞清楚）\n</code></pre><ul>\n<li>横、竖排版</li>\n</ul>\n<pre><code>[attrStr addAttribute:NSVerticalGlyphFormAttributeName\n                value:@0   // 0横向排版 1竖向排版 iOS中除了0以外都未定义，所以都为横向排版\n                range:NSMakeRange(0, attrStr.length)];\n</code></pre><ul>\n<li>下划线</li>\n</ul>\n<pre><code>[attrStr addAttribute:NSUnderlineStyleAttributeName\n                value:@(NSUnderlineStyleSingle)\n                range:NSMakeRange(4, 3)];\n\n\n[attrStr addAttribute:NSUnderlineColorAttributeName\n                value:[UIColor redColor]\n                range:NSMakeRange(4, 3)];\n</code></pre><ul>\n<li>删除线</li>\n</ul>\n<pre><code>[attrStr addAttribute:NSStrikethroughStyleAttributeName\n                value:@(NSUnderlinePatternSolid | NSUnderlineStyleSingle)\n                range:NSMakeRange(4, 3)];\n\n\n[attrStr addAttribute:NSStrikethroughColorAttributeName\n                value:[UIColor redColor]\n                range:NSMakeRange(4, 3)];\n</code></pre><ul>\n<li>网址</li>\n</ul>\n<pre><code>NSMutableAttributedString * attrStr = [[NSMutableAttributedString alloc] initWithString:@&quot;这是一个网址http://www.jianshu.com/users/37f2920f6848字符串！&quot;];\n[attrStr addAttribute:NSLinkAttributeName\nvalue:@&quot;http://www.jianshu.com/users/37f2920f6848&quot;\nrange:NSMakeRange(6, attrStr.length -6 -4)];\n// label显示出来的连接是点击不了的 textView的是可以的 有响应的回调函数shouldInteractWithURL\n</code></pre><ul>\n<li>图文混排</li>\n</ul>\n<pre><code>NSMutableAttributedString * attrStr = [[NSMutableAttributedString alloc] initWithString:@&quot;这是一个富文本字符串！&quot;];\n// 创建一个文字附件对象\nNSTextAttachment *textAttachment = [[NSTextAttachment alloc] init];\ntextAttachment.image = [UIImage imageNamed:@&quot;11.png&quot;];  //设置图片源\ntextAttachment.bounds = CGRectMake(0, -6, 30, 30);  //设置图片位置和大小\n// 将文字附件转换成属性字符串\nNSAttributedString *attachmentAttrStr = [NSAttributedString attributedStringWithAttachment:textAttachment];\n// 将转换成属性字符串插入到目标字符串\n[attrStr insertAttributedString:attachmentAttrStr atIndex:8];\n</code></pre><ul>\n<li>段落</li>\n</ul>\n<pre><code>NSMutableParagraphStyle *paragraphStyle = [[NSMutableParagraphStyle alloc] init];\n// 行间距\nparagraphStyle.lineSpacing = 15.f;\n// 段落间距\nparagraphStyle.paragraphSpacing = 30.f;\n// 段落缩进像素\nparagraphStyle.firstLineHeadIndent = 40.f;\n// 整体缩进像素\nparagraphStyle.headIndent = 15.f;\n// 对齐方式\nparagraphStyle.alignment = NSTextAlignmentLeft;\n// 其他属性请自行查阅NSMutableParagraphStyle头文件\n\nNSMutableAttributedString * attrStr = [[NSMutableAttributedString alloc] initWithString:@&quot;这是一个富文本字符串。\\n这是一个富文本字符串？\\n这是一个富文本字符串！&quot;];\n[attrStr addAttribute:NSParagraphStyleAttributeName\n                value:paragraphStyle\n                range:NSMakeRange(0, attrStr.length)];\n</code></pre>","prev":{"title":"用masonry自适应label高度和宽度","slug":"用masonry自适应label高度和宽度"},"next":{"title":"iOS中NSUserDefaults详解","slug":"iOS中NSUserDefaults详解"},"link":"http://yoursite.com/post/iOS关于富文本字符串/"}