{"per_page":10,"total":2,"current":1,"data":[{"title":"iOS中圆角与阴影并存","date":"2019-04-12T06:48:23.000Z","excerpt":"<p>圆角和阴影无法共存的原因就是因为这句代码。Because shadow is an effect done outside the View, and that masksToBounds set to YES will tell the UIView not to draw everything that is outside itself.<br>这句话的意思就是，圆角都是我给你割出来的，圆角外面的阴影自然也割掉了~</p>\n<p>所以，这么看来，圆角与阴影不能并存啊（仅限这种圆角实现的方式）</p>\n<p>解决：<br>CALayer可以完成视图上的所有UI操作，那我们把CALayer当成一个视图加到view上，所以分为两步实现</p>","slug":"iOS中圆角与阴影并存"},{"title":"<__NSArrayM:XXXXXX> was mutated while being enumerated.","date":"2019-04-12T06:42:15.000Z","excerpt":"<p>这样的代码运行起来会出现崩溃</p>\n<pre><code>//targetButton\nfor (UIButton * button in self.selectedBtnArr)\n{\n    if (targetButton.tag ==  button.tag)\n    {\n        [self.selectedBtnArr removeObject:button];\n    }\n}\n</code></pre><p>在对可变数据类型如字典、数组，进行快速遍历的时候，是不可以对其增、删操作。否则就会引起“&lt;__NSArrayM:XXXXXX&gt; was mutated while being enumerated.”的崩溃。</p>","slug":"NSArrayM-XXXXXX-was-mutated-while-being-enumerated"},{"title":"iOS 音频录制以及播放","date":"2019-04-08T10:08:44.000Z","excerpt":"<p>在工作中又遇到了音频录制的需求，再次做此记录</p>\n<p>贴上关键代码</p>\n<pre><code>#import &quot;GXHLXRecordVoiceEmailView.h&quot;\n#import &lt;AVFoundation/AVFoundation.h&gt;\n\n@interface GXHLXRecordVoiceEmailView () &lt;AVAudioRecorderDelegate,AVAudioPlayerDelegate&gt; {\n\n    AVAudioRecorder *recorder;//录音对象\n    AVAudioPlayer *player;//播放对象\n    NSURL *fileUrl;//文件路径\n    NSTimer *timer;\n}\n\n\n@property (nonatomic, strong) AVAudioSession *session;\n\n@end\n</code></pre>","slug":"iOS-音频录制以及播放"},{"title":"iOS如何定位Masonry约束报错的控件","date":"2019-04-02T14:20:08.000Z","excerpt":"<p>控制台输出的报错如下</p>","slug":"iOS如何定位Masonry约束报错的控件"},{"title":"iOS之viewForkey和objectForkey，setObjectForkey和setValueForkey的区别","date":"2019-04-02T14:08:23.000Z","excerpt":"<p>1、viewForkey和objectForkey的区别</p>\n<p>objectForKey: returns the value associated with aKey, or nil if no value is associated with aKey. 返回指定 key 的 value，若没有这个 key 返回 nil.<br>valueForKey: returns the value associated with a given key. 同样是返回指定 key 的 value。<br>但文档里 valueForKey: 有额外一点：一般来说 key 可以是任意字符串组合，如果 key 不是以 @ 符号开头，这时候 valueForKey: 等同于 objectForKey:，如果是以 @ 开头，那么 valueForKey:会去掉 key 里的 @ 然后用剩下部分作为 key 执行 [super valueForKey:]。<br>比如：</p>","slug":"iOS之viewForkey和objectForkey，setObjectForkey和setValueForkey的区别"},{"title":"iOS中求出UILabel中文字的行数以及每一行的内容","date":"2019-04-01T06:19:52.000Z","excerpt":"<p>今天遇到一个需求，需要计算label中文字的行数。想了好久也没想到好的解决方法，就在网上找了下。结果发现一篇文章是讲这个的。这部分代码不但能够求出一个label中文字行数，更厉害的是能够求出每一行的内容是什么； 代码如下。</p>","slug":"iOS中求出UILabel中文字的行数以及每一行的内容"},{"title":"iOS 手势UIGesTureRecognier详解","date":"2019-03-29T10:05:06.000Z","excerpt":"<p>一. 手势UIGestureRecognier简介</p>\n<p>iOS 3.2之后，苹果推出了手势识别功能（Gesture Recognizer），在触摸事件处理方面，大大简化了开发者的开发难度。利用UIGestureRecognizer，能轻松识别用户在某个view上面做的一些常见手势。UIGestureRecognizer是一个抽象类，对iOS中的事件传递机制面向应用进行封装，将手势消息的传递抽象为了对象。其中定义了所有手势的基本行为，使用它的子类才能处理具体的手势。</p>","slug":"iOS-手势UIGesTureRecognier详解"},{"title":"hexo 多终端同步博客","date":"2019-03-29T02:59:24.000Z","excerpt":"<p>为了避免再出现博客丢失的问题在网上也h查询了好多办法，一下为是一个我觉得挺靠谱的方式，本人尝试并且通过，在此记录</p>","slug":"hexo-多终端同步博客"},{"title":"iOS中webview和wkwebview获取网页title的方式","date":"2019-03-29T02:17:19.000Z","excerpt":"<p>UIWebView获取title的方式</p>\n<pre><code>在代理webViewDidFinishLoad方法中\n-(void) webViewDidFinishLoad:(UIWebView *)webView {  \n[UIApplicationsharedApplication].networkActivityIndicatorVisible =NO;  \nself.title ＝  [webView stringByEvaluatingJavaScriptFromString:@&quot;document.title&quot;];//获取当前页面的title  \n}\n</code></pre>","slug":"iOS中webview和wkwebview获取网页title的方式"},{"title":"用masonry自适应label高度和宽度","date":"2019-03-29T02:14:35.000Z","excerpt":"","slug":"用masonry自适应label高度和宽度"}]}